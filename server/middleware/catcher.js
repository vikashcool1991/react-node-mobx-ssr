import {isNumber} from 'lodash'

/**
 * Middleware for catching errors thrown in routes
 * @param ctx
 */
export default async function(err) {
  if (!err) return

  let status = err.status || 400

  const type = this.accepts(['text', 'json', 'html'])
  if (!type) {
    status = 406;
    err.message = 'Unsupported type'
  }

  if (!isNumber(status)) {
    status = 500
  }

  this.body = err.message

  // Exceptions are generated by our app (ex: Wrong login)
  // So we don't need to log the whole stacktrace
  if (err.constructor.name !== 'Exception') {
    this.app.emit('error', err, this)
  }

  // Nothing we can do here other than delegate to the app-level handler and log.
  if (this.headerSent || !this.writable) {
    // console.debug('headers were already sent, returning early')
    err.headerSent = true
    return
  }

  this.type = 'json'
  this.status = status
  this.body = JSON.stringify(this.body, null, 2)
  this.length = Buffer.byteLength(this.body)
  this.res.end(this.body)
}
